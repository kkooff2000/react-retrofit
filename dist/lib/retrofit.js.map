{"version":3,"sources":["../../lib/retrofit.js"],"names":["KEY_ACCESS_TOKEN","KEY_REFRESH_TOKEN","Get","url","config","axiosDecorator","Post","Put","Update","Delete","Auth","target","name","descriptor","oldVal","value","auth_url","method","then","result","call","data","access_token","refresh_token","AsyncStorage","setItem","OnRefreshToken","haveRefresh","onRefreshToken","Token","useToken","re","match","newUrl","length","replace","_url","apiCall","error","response","console","log","status","headers","undefined","refreshTokenAndRetry","refreshToken","getItem","attach","token","includes","Promise","resolve"],"mappings":";;;;;;;;;AAAA;;AACA;;;;;;;;;;;;;;AAEA,IAAMA,gBAAgB,GAAG,kBAAzB;AACA,IAAMC,iBAAiB,GAAG,mBAA1B;AAEA;;;;;AAIO,IAAMC,GAAG,GAAG,SAANA,GAAM,CAACC,GAAD,EAAMC,MAAN,EAAiB;AAAE,SAAOC,cAAc,CAAC,KAAD,EAAQF,GAAR,EAAaC,MAAb,CAArB;AAA2C,CAA1E;AAEP;;;;;;;;AAIO,IAAME,IAAI,GAAG,SAAPA,IAAO,CAACH,GAAD,EAAMC,MAAN,EAAiB;AAAE,SAAOC,cAAc,CAAC,MAAD,EAASF,GAAT,EAAcC,MAAd,CAArB;AAA4C,CAA5E;AAEP;;;;;;;;AAIO,IAAMG,GAAG,GAAG,SAANA,GAAM,CAACJ,GAAD,EAAMC,MAAN,EAAiB;AAAE,SAAOC,cAAc,CAAC,KAAD,EAAQF,GAAR,EAAaC,MAAb,CAArB;AAA2C,CAA1E;AAEP;;;;;;;;AAIO,IAAMI,MAAM,GAAG,SAATA,MAAS,CAACL,GAAD,EAAMC,MAAN,EAAiB;AAAE,SAAOC,cAAc,CAAC,QAAD,EAAWF,GAAX,EAAgBC,MAAhB,CAArB;AAA8C,CAAhF;AAEP;;;;;;;;AAIO,IAAMK,MAAM,GAAG,SAATA,MAAS,CAACN,GAAD,EAAMC,MAAN,EAAiB;AAAE,SAAOC,cAAc,CAAC,QAAD,EAAWF,GAAX,EAAgBC,MAAhB,CAArB;AAA8C,CAAhF;AAEP;;;;;;;;AAIO,IAAMM,IAAI,GAAG,SAAPA,IAAO,CAACP,GAAD,EAAMC,MAAN;AAAA,SAAiB,UAACO,MAAD,EAASC,IAAT,EAAeC,UAAf,EAA8B;AAC/D,QAAIC,MAAM,GAAGD,UAAU,CAACE,KAAxB;;AACAF,IAAAA,UAAU,CAACE,KAAX,GAAmB,YAAmB;AAAA;;AAClCJ,MAAAA,MAAM,CAACK,QAAP,GAAkBb,GAAlB;AACA;AACIc,QAAAA,MAAM,EAAE,MADZ;AAEId,QAAAA,GAAG,EAAEA;AAFT,SAGOC,MAHP,GAIGc,IAJH,CAIQ,UAAAC,MAAM,EAAI;AAAA,2BACwBL,MAAM,CAACM,IAAP,CAAY,KAAZ,EAAkBD,MAAM,CAACE,IAAzB,CADxB;AAAA,YACRC,YADQ,gBACRA,YADQ;AAAA,YACMC,aADN,gBACMA,aADN;;AAEdC,iCAAaC,OAAb,CAAqBzB,gBAArB,EAAuCsB,YAAvC;;AACAE,iCAAaC,OAAb,CAAqBxB,iBAArB,EAAwCsB,aAAxC;AACH,OARD;AASH,KAXD;AAYH,GAdmB;AAAA,CAAb;;;;AAgBA,IAAMG,cAAc,GAAG,SAAjBA,cAAiB;AAAA,SAAM,UAACf,MAAD,EAASC,IAAT,EAAeC,UAAf,EAA8B;AAC9D,QAAIC,MAAM,GAAGD,UAAU,CAACE,KAAxB;AACAJ,IAAAA,MAAM,CAACgB,WAAP,GAAqB,IAArB;AACAhB,IAAAA,MAAM,CAACiB,cAAP,GAAwBf,UAAU,CAACE,KAAnC;AACH,GAJ6B;AAAA,CAAvB;;;;AAMA,IAAMc,KAAK,GAAG,SAARA,KAAQ,CAAClB,MAAD,EAASC,IAAT,EAAeC,UAAf,EAA8B;AAC/CA,EAAAA,UAAU,CAACiB,QAAX,GAAsB,IAAtB;AACH,CAFM;;;;AAIP,IAAMzB,cAAc,GAAG,SAAjBA,cAAiB,CAACY,MAAD,EAASd,GAAT,EAAcC,MAAd;AAAA,SAAyB,UAACO,MAAD,EAASC,IAAT,EAAeC,UAAf,EAA8B;AAC1E,QAAIC,MAAM,GAAGD,UAAU,CAACE,KAAxB;AACA,QAAIgB,EAAE,GAAG,eAAT;;AACAlB,IAAAA,UAAU,CAACE,KAAX,GAAmB,YAAmB;AAClC,UAAII,MAAM,GAAGhB,GAAG,CAAC6B,KAAJ,CAAUD,EAAV,CAAb;AACA,UAAIE,MAAM,GAAG9B,GAAb;;AACA,UAAIgB,MAAM,IAAIA,MAAM,CAACe,MAAP,GAAgB,CAA9B,EAAiC;AAC7BD,QAAAA,MAAM,GAAGA,MAAM,CAACE,OAAP,CAAe,MAAMhB,MAAM,CAAC,CAAD,CAAZ,GAAkB,GAAjC,EAAsCR,MAAM,CAACQ,MAAM,CAAC,CAAD,CAAP,CAA5C,CAAT;AACH;;AAED,aAAOiB,IAAI,CAACH,MAAD,EAASpB,UAAU,CAACiB,QAAX,KAAwB,IAAjC,CAAJ,CACFZ,IADE,CACG,UAAAf,GAAG,EAAI;AACT,YAAMkC,OAAO,GAAG,SAAVA,OAAU,CAACJ,MAAD;AAAA,iBAAY;AACxBhB,YAAAA,MAAM,EAAEA,MADgB;AAExBd,YAAAA,GAAG,EAAE8B;AAFmB,aAGrB7B,MAHqB,GAIzBc,IAJyB,CAIpB,UAAAC,MAAM,EAAI;AACd,mBAAOL,MAAM,CAACM,IAAP,CAAYT,MAAZ,EAAoBQ,MAAM,CAACE,IAA3B,CAAP;AACH,WAN2B,CAAZ;AAAA,SAAhB;;AAOA,eAAOgB,OAAO,CAACJ,MAAD,CAAP,UAAsB,UAAUK,KAAV,EAAiB;AAC1C,cAAIA,KAAK,CAACC,QAAV,EAAoB;AAChBC,YAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAelB,IAA3B;AACAmB,YAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeG,MAA3B;AACAF,YAAAA,OAAO,CAACC,GAAR,CAAYH,KAAK,CAACC,QAAN,CAAeI,OAA3B;;AACA,gBAAIL,KAAK,CAACC,QAAN,CAAeG,MAAf,KAA0B,GAA1B,IAAiC/B,MAAM,CAACiB,cAAP,KAA0BgB,SAA/D,EAA0E;AACtE,kBAAMzB,OAAM,GAAG0B,oBAAoB,CAAClC,MAAM,CAACiB,cAAR,EAAwBS,OAAxB,EAAiCJ,MAAjC,CAAnC;;AACA,qBAAOd,OAAP;AACH;AACJ;AACJ,SAVM,CAAP;AAWH,OApBE,CAAP;AAqBH,KA5BD;AA6BH,GAhCsB;AAAA,CAAvB;;AAkCA,IAAM0B,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACjB,cAAD,EAAiBS,OAAjB,EAA0BlC,GAA1B,EAAkC;AAC3D,SAAO2C,YAAY,GAAG5B,IAAf,CAAoB,UAAA4B,YAAY,EAAI;AACvC,WAAOlB,cAAc,CAACkB,YAAD,CAArB;AACH,GAFM,EAEJ5B,IAFI,CAEC,gBAAqC;AAAA,QAAlCI,YAAkC,QAAlCA,YAAkC;AAAA,QAApBC,aAAoB,QAApBA,aAAoB;AACzC,QAAIuB,YAAJ,EACItB,yBAAaC,OAAb,CAAqBxB,iBAArB,EAAwCsB,aAAxC;AACJ,WAAOC,yBAAaC,OAAb,CAAqBzB,gBAArB,EAAuCsB,YAAvC,CAAP;AACH,GANM,EAMJJ,IANI,CAMC,YAAM;AACV,WAAOkB,IAAI,CAACjC,GAAD,EAAM,IAAN,CAAX;AACH,GARM,EAQJe,IARI,CAQC,UAAAf,GAAG,EAAI;AACX,WAAOkC,OAAO,CAAClC,GAAD,CAAd;AACH,GAVM,CAAP;AAWH,CAZD;;AAcA,IAAM2C,YAAY,GAAG,SAAfA,YAAe,GAAM;AACvB,SAAOtB,yBAAauB,OAAb,CAAqB9C,iBAArB,CAAP;AACH,CAFD;;AAIA,IAAMmC,IAAI,GAAG,SAAPA,IAAO,CAACjC,GAAD,EAAM6C,MAAN,EAAiB;AAC1B,MAAIA,MAAJ,EAAY;AACR,WAAOxB,yBAAauB,OAAb,CAAqB/C,gBAArB,EAAuCkB,IAAvC,CAA4C,UAAA+B,KAAK;AAAA,aAAI9C,GAAG,CAAC+C,QAAJ,CAAa,GAAb,IACxD/C,GAAG,GAAG,gBAAN,GAAyB8C,KAD+B,GACvB9C,GAAG,GAAG,gBAAN,GAAyB8C,KADN;AAAA,KAAjD,CAAP;AAEH,GAHD,MAGO;AACH,WAAO,IAAIE,OAAJ,CAAY,UAACC,OAAD;AAAA,aAAaA,OAAO,CAACjD,GAAD,CAApB;AAAA,KAAZ,CAAP;AACH;AACJ,CAPD","sourcesContent":["import axios, { AxiosRequestConfig } from 'axios'\nimport AsyncStorage from '@react-native-community/async-storage'\n\nconst KEY_ACCESS_TOKEN = \"KEY_ACCESS_TOKEN\"\nconst KEY_REFRESH_TOKEN = \"KEY_REFRESH_TOKEN\"\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Get = (url, config) => { return axiosDecorator('get', url, config) }\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Post = (url, config) => { return axiosDecorator('post', url, config) }\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Put = (url, config) => { return axiosDecorator('put', url, config) }\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Update = (url, config) => { return axiosDecorator('update', url, config) }\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Delete = (url, config) => { return axiosDecorator('delete', url, config) }\n\n/**\n  * @param {string} url\n  * @param {AxiosRequestConfig} config\n*/\nexport const Auth = (url, config) => (target, name, descriptor) => {\n    let oldVal = descriptor.value\n    descriptor.value = function (...args) {\n        target.auth_url = url\n        axios({\n            method: 'post',\n            url: url,\n            ...config\n        }).then(result => {\n            let { access_token, refresh_token } = oldVal.call(this, result.data)\n            AsyncStorage.setItem(KEY_ACCESS_TOKEN, access_token)\n            AsyncStorage.setItem(KEY_REFRESH_TOKEN, refresh_token)\n        })\n    }\n}\n\nexport const OnRefreshToken = () => (target, name, descriptor) => {\n    let oldVal = descriptor.value\n    target.haveRefresh = true\n    target.onRefreshToken = descriptor.value\n}\n\nexport const Token = (target, name, descriptor) => {\n    descriptor.useToken = true\n}\n\nconst axiosDecorator = (method, url, config) => (target, name, descriptor) => {\n    let oldVal = descriptor.value\n    let re = /.*{([\\w]+)}.*/\n    descriptor.value = function (...args) {\n        let result = url.match(re)\n        let newUrl = url\n        if (result && result.length > 1) {\n            newUrl = newUrl.replace('{' + result[1] + '}', target[result[1]])\n        }\n\n        return _url(newUrl, descriptor.useToken === true)\n            .then(url => {\n                const apiCall = (newUrl) => axios({\n                    method: method,\n                    url: newUrl,\n                    ...config\n                }).then(result => {\n                    return oldVal.call(target, result.data)\n                })\n                return apiCall(newUrl).catch(function (error) {\n                    if (error.response) {\n                        console.log(error.response.data)\n                        console.log(error.response.status)\n                        console.log(error.response.headers)\n                        if (error.response.status === 401 && target.onRefreshToken !== undefined) {\n                            const result = refreshTokenAndRetry(target.onRefreshToken, apiCall, newUrl)\n                            return result\n                        }\n                    }\n                })\n            })\n    }\n}\n\nconst refreshTokenAndRetry = (onRefreshToken, apiCall, url) => {\n    return refreshToken().then(refreshToken => {\n        return onRefreshToken(refreshToken)\n    }).then(({ access_token, refresh_token }) => {\n        if (refreshToken)\n            AsyncStorage.setItem(KEY_REFRESH_TOKEN, refresh_token)\n        return AsyncStorage.setItem(KEY_ACCESS_TOKEN, access_token)\n    }).then(() => {\n        return _url(url, true)\n    }).then(url => {\n        return apiCall(url)\n    })\n}\n\nconst refreshToken = () => {\n    return AsyncStorage.getItem(KEY_REFRESH_TOKEN)\n}\n\nconst _url = (url, attach) => {\n    if (attach) {\n        return AsyncStorage.getItem(KEY_ACCESS_TOKEN).then(token => url.includes('?') ?\n            url + '&access_token=' + token : url + '?access_token=' + token)\n    } else {\n        return new Promise((resolve) => resolve(url))\n    }\n}"],"file":"retrofit.js"}